<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cms.dao.BaseCourseDao">
  <resultMap id="BaseResultMapBaseCourse" type="com.cms.entity.BaseCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="synopsis" jdbcType="VARCHAR" property="synopsis" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, synopsis
  </sql>
  
  <select id="getBaseCourseForSelect" resultMap="BaseResultMapBaseCourse">
  	select id,name from t_base_course 
  	<where>
  		<if test="_parameter != null and _parameter != ''">
    		name like CONCAT ('%',#{searchKey},'%')
  		</if>
  	</where>
  	limit 0, 10
  </select>
  <select id="getBaseCourse" resultMap="BaseResultMapBaseCourse">
  	select
  	<include refid="Base_Column_List" />
  	from t_base_course
  	<where>
  		<if test="param2 != null and param2 != ''">
    		name like CONCAT ('%',#{param2},'%')
  		</if>
  	</where>
  	<if test="param1 != null">
  		limit #{param1.start}, #{param1.pageSize}
  	</if>
  </select>
  
  <select id="getTotalItemsCount" resultType="Integer">
  	select count(*)
    from t_base_course
    <where>
    	<if test="_parameter != null and _parameter != ''">
    		name like CONCAT ('%',#{searchKey},'%')
    	</if>
    </where>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMapBaseCourse">
    select 
    <include refid="Base_Column_List" />
    from t_base_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_base_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteInList" >
  	delete from t_base_course where id in
  		<foreach collection="list" item="id" separator="," open="(" close=")">
  			#{id}
  		</foreach>
  </delete>
  
  <insert id="insertBatch" parameterType="java.util.List">
  	insert into t_base_course (id, name, synopsis
      ) values 
      <foreach collection="list" item="item" separator="," >
  		(#{item.id}, #{item.name}, #{item.synopsis})
  	  </foreach>
  </insert>
  
  <insert id="insert" parameterType="com.cms.entity.BaseCourse">
    insert into t_base_course (id, name, synopsis)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{synopsis,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cms.entity.BaseCourse">
    insert into t_base_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="synopsis != null">
        synopsis,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null">
        #{synopsis,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cms.entity.BaseCourse">
    update t_base_course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null">
        synopsis = #{synopsis,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cms.entity.BaseCourse">
    update t_base_course
    set name = #{name,jdbcType=VARCHAR}, synopsis = #{synopsis,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>